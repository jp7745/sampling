{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "qb_test_results.schema.0.0.1.json",
    "title": "Test Results",
    "description": "The results from running a specific test_procedure.  Results are digitally signed by the test performer.",
    "required": [
        "test_results",
        "digital_signature"
    ],
    "properties": {
        "test_results": {
            "title": "Test Results",
            "description": "The results from running a specific test_procedure.",
            "required": [
                "results_timestamp",
                "test_uuid",
                "results_uuid",
                "test_performer_contact_info",
                "compute_details",
                "run_time",
                "compute_resources_used",
                "best_solutions_reported"
            ],
            "type": "object",
            "properties": {
                "results_timestamp": {
                    "title": "Timestamp",
                    "description": "When performer prepared test_results in ISO 8601 format to the second.  This may be different than algorithm start/stop time or other run time fields.",
                    "type": "string"
                },
                "test_uuid": {
                    "title": "Test UUID",
                    "type": "string",
                    "description": "RFC 4112 UUID of the test_procedure",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                },
                "results_uuid": {
                    "title": "Results UUID",
                    "type": "string",
                    "description": "RFC 4122 UUID generated by the performer for the test_results",
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                },
                "test_performer_contact_info": {
                    "title": "Point of Contact(s)",
                    "description": "A list of name/email/institution objects.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "email",
                            "institution"
                        ],
                        "properties": {
                            "name": {
                                "title": "Name",
                                "type": "string"
                            },
                            "email": {
                                "title": "Email",
                                "type": "string"
                            },
                            "institution": {
                                "title": "Institution/Organization",
                                "type": "string"
                            },
                            "other_info": {
                                "title": "Other Information",
                                "description": "An optional object with no required structure for the test performer to put other contact information or comments in.",
                                "type": "object"
                            }
                        }
                    }
                },
                "compute_details": {
                    "title": "Compute Hardware & Software Details",
                    "description": "Details on the hardware and software (algorithm) used by the test performer.",
                    "type": "object",
                    "required": [
                        "hardware_details",
                        "software_details",
                        "hardware_type"
                    ],
                    "properties": {
                        "hardware_type": {
                            "title": "Hardware Type",
                            "description": "Type of device the algorithm is actually run on: `classical_computer`,`quantum_computer`,`hybrid_classical_quantum_computer`,`other`.",
                            "type": "string",
                            "enum": [
                                "classical_computer",
                                "quantum_computer",
                                "hybrid_classical_quantum_computer",
                                "other"
                            ]
                        },
                        "hardware_details": {
                            "title": "Hardware Details",
                            "description": "An object for the test performer to document details of their computing hardware.  No structure is defined for this object.  Contents may include:  CPU type/version, GPU type/version, memory, storage, number of compute nodes, etc.",
                            "type": "object"
                        },
                        "software_details": {
                            "title": "Software Details",
                            "description": "An object for the test performer to document their software and algorithm.   No structure is defined for this object.  Contents may include:  software version, a list of parameters or settings that have been changed from default values, and citations/links to specific algorithm details.",
                            "type": "object"
                        },
                        "other_details": {
                            "title": "Other Details",
                            "description": "An optional object for the test performer to document any other information.",
                            "type": "object"
                        }
                    }
                },
                "run_time": {
                    "title": "Wall Clock Runtime",
                    "description": "A breakdown of start/stop wall clock time(s) reported according to ISO 8601 and duration in seconds.  run_time is broken down into (1) overall_time, (2) preprocessing_time, (3), algorithm_run_time, and (4) postprocessing_time.  See descriptions of each object.",
                    "type": "object",
                    "required": [
                        "overall_time",
                        "preprocessing_time",
                        "algorithm_run_time",
                        "postprocessing_time"
                    ],
                    "properties": {
                        "overall_time": {
                            "title": "Overall Wall Clock Time",
                            "description": "Includes all pre/postprocessing times and algorithm_run_time.",
                            "type": "object",
                            "required": [
                                "wall_clock_start_time",
                                "wall_clock_stop_time",
                                "seconds"
                            ],
                            "properties": {
                                "wall_clock_start_time": {
                                    "title": "Wall Clock Start Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "wall_clock_stop_time": {
                                    "title": "Wall Clock Stop Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "seconds": {
                                    "title": "Duration in Seconds",
                                    "description": "The number of seconds that has elapsed between start/stop times reported.",
                                    "type": "number"
                                }
                            }
                        },
                        "preprocessing_time": {
                            "title": "Preprocessing Wall Clock Time",
                            "description": "The time required to load any data into an idle machine before running an algorithm.",
                            "type": "object",
                            "required": [
                                "wall_clock_start_time",
                                "wall_clock_stop_time",
                                "seconds"
                            ],
                            "properties": {
                                "wall_clock_start_time": {
                                    "title": "Wall Clock Start Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "wall_clock_stop_time": {
                                    "title": "Wall Clock Stop Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "seconds": {
                                    "title": "Duration in Seconds",
                                    "description": "The number of seconds that has elapsed between start/stop times reported.",
                                    "type": "number"
                                }
                            }
                        },
                        "algorithm_run_time": {
                            "title": "Algorithm Run Time",
                            "description": "The start/stop times for how long the software/algorithm ran.",
                            "type": "object",
                            "required": [
                                "wall_clock_start_time",
                                "wall_clock_stop_time",
                                "seconds"
                            ],
                            "properties": {
                                "wall_clock_start_time": {
                                    "title": "Wall Clock Start Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "wall_clock_stop_time": {
                                    "title": "Wall Clock Stop Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "seconds": {
                                    "title": "Duration in Seconds",
                                    "description": "The number of seconds that has elapsed between start/stop times reported.",
                                    "type": "number"
                                },
                                "compute_node_run_time_breakdown": {
                                    "title": "Compute Node Run Time Breakdown",
                                    "description": "Breakdown of algorithm_run_time across multiple nodes if a cluster of multiple machines was utilized.\n\nThis object is optional.  There is no required structure for this object."
                                }
                            }
                        },
                        "postprocessing_time": {
                            "title": "Postprocessing Wall Clock Time",
                            "description": "The time required measure or read out any data from the machine.  .",
                            "type": "object",
                            "required": [
                                "wall_clock_start_time",
                                "wall_clock_stop_time",
                                "seconds"
                            ],
                            "properties": {
                                "wall_clock_start_time": {
                                    "title": "Wall Clock Start Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "wall_clock_stop_time": {
                                    "title": "Wall Clock Stop Time",
                                    "description": "An ISO 8601 timestamp",
                                    "type": "string"
                                },
                                "seconds": {
                                    "title": "Duration in Seconds",
                                    "description": "The number of seconds that has elapsed between start/stop times reported.",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "compute_resources_used": {
                "title": "Compute Resources Used",
                "description": "An optional object to itemize CPU cycles, memory used, flops, or other resources that were used during the execution of the algorithm.",
                "oneOf": [
                    {
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "best_solutions_reported": {
                "title": "Best Solution(s) Reported",
                "description": "A list of the \"best\" solutions found that are--in the opinion of the test performer--worth reporting.  This will typically be a list with one item in it.  If you are doing random search or enumeration, please don't report all solutions!  If no feasible solutions are found in time_limit, but for some reason the test performer still wants to report test_results, then this may be set to null.",
                "oneOf": [
                    {
                        "type": "null"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "solution_values"
                            ],
                            "properties": {
                                "name": {
                                    "title": "Name of solution",
                                    "description": "A string that has the name or ID generated by the test performer to identify solutions reported.  This is useful if multiple solutions are reported.  This is not the same thing as the results_uuid above.",
                                    "type": "string"
                                },
                                "solution_values": {
                                    "title": "Solution Values",
                                    "description": "An object with variable names as fields and variable values (numbers) as values.  This may be limited to non-zero variable values.  If a variable is not listed, it is assumed to be zero in the solution.",
                                    "type": "object"
                                },
                                "objective_value": {
                                    "title": "Objective Value",
                                    "description": "The objective function value of the solution.  Required for optimization test_procedures.",
                                    "oneOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "lower_bound": {
                                    "title": "Lower Bound",
                                    "description": "A lower bound on the objective value.  This may be obtained from a relaxation or from some other construction.  Required for optimization test_procedures.  If this is not calculated, it may be set to null",
                                    "oneOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "upper_bound": {
                                    "title": "Upper Bound",
                                    "description": "An upper bound on the objective value.  This may be obtained from a relaxation or from some other construction.  Required for optimization test_procedures.  If this is not calculated, it may be set to null",
                                    "oneOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "optimality_gap": {
                                    "title": "Optimality Gap",
                                    "description": "Required for optimization problems.  If the problem is a \"minimization\", then optimality_gap = (upper_bound - lower_bound)/upper_bound.  If the problem is a \"maximization\", then optimality_gap = (lower_bound - upper_bound)/lower_bound.  If this is not calculated, it may be set to null",
                                    "oneOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "constraint_violations": {
                                    "title": "Constraint Violations",
                                    "description": "An object with constraint names as fields and the absolute amount they are violated by solution_value.  This is limited to constraints that are violated by solution_values; constraints that are not violated do not need to be listed.  If no constraints are violated, this may be set to null.",
                                    "oneOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                },
                                "comments": {
                                    "title": "Comments",
                                    "type": "object",
                                    "description": "An object with no required structure for the test performer to put in any comments or other information."
                                },
                                "other_metrics": {
                                    "title": "Other Metrics",
                                    "description": "An object with no required structure for the test performer to add any additional metrics not already described.",
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            }
        }
    },
    "digital_signature": {
        "title": "Digital Signature",
        "description": "This is created by the test performer and their private key.  It is calculated over the test_results object.  If this is not implemented, it may be set to null.\nTODO:  FIND AND REFERENCE THE JWS SCHEMA",
        "anyOf": [
            {
                "type": "object"
            },
            {
                "type": "null"
            }
        ]
    }
}